Matrix chain Multiplication

6 Variants:
1) Priniting MCM
2) Evaluate expression to true or Boolean parenthesis: https://www.youtube.com/watch?v=pGVguAcWX4g&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=39
if(i>j){return false;}
if(i==j){
 if(istrue){return s[i]=='T';}
 else{return s[i]=='F';}
}
for(int k=i+1;k<=j-1;k+=2){

int lt=solve(s,i,k-1,true);
int lf=solve(s,i,k-1,false);
int rt=solve(s,k+1,j,true);
int rf=solve(s,k+1,j,false);
if(k=='^'){if(istrue)ans=lt*rf+lf*rt; else{lt*rt + rf*lf;}}
if(k=='|'){if(istrue){ans=lt*rt + lt*rf + rt*lf;}else{ ans=lf*rf;}}
if(k=='&'){if(istrue){ans=lt*rt}else{ans=lt*rf + rt*lf + lf*rf}}
}

3) Minimimum and Maximum value of an expression
4) Palindromic partitioning : https://www.youtube.com/watch?v=szKVpQtBHh8&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=36
for (k=i k=j-1) i to k and k+1 to j
for (k=i+1 k=j) i to k-1 and k to j
In the worst case for the string of size n, the maximum number of partitions are n-1. 


code:
int solve(int arr[], int i, int j){
  if(i>=j){return 0;}
  if(partition(arr,i,j){return 0;}
  int ans=INT_MAX;
  /////////////memoize (i,j)
  for(int k=i;k<j;k++){
  //partition
  /////////////memoize (1,k) and (k+1,j)
  ans=min(1+ solve(1,k) +solve(k+1,j));
  }
  return ans;
}
5) Scramble strings : https://www.youtube.com/watch?v=SqA0o-DGmEw&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=41
6) Egg dropping problem
